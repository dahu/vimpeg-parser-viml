; VimL (Vim Script) Parser
; Barry Arthur, 29 Oct 2011

.skip_white = true
.namespace = 'viml_parser'
.parser_name = 'viml#parser'
.root_element = 'viml'

viml            ::=  expr1
expr1           ::=  expr2 ('?' expr1 ':' expr1)?
expr2           ::=  expr3 ('||' expr2)?
expr3           ::=  expr4 ('&&' expr3)?
expr4           ::=  expr5 (isoreqop expr4)?
expr5           ::=  expr6 (addop expr5)?
expr6           ::=  expr7 (mulop expr6)?
expr7           ::=  unop* expr8
expr8           ::=  number | string | optval | envvar | regval | list | dict | nestedexpr | expr9
expr9           ::=  (funccall | ident)? expr10*
;expr10          ::=  (listref | ((ident | funccall) ('\.' expr9)))*
expr10          ::=  (listref | ('\.' (funccall | ident)))
listref         ::=  '\[' exprange '\]'

eqop            ::=  ('==' | '!=' | '>=' | '>' | '<=' | '<' | '=\~' | '!\~') ('?' | '#')?
isop            ::=  'is' | 'isnot'
isoreqop        ::=  isop | eqop
addop           ::=  '+' | '-' | '\.'
mulop           ::=  '*' | '/' | '%'
unop            ::=  '!' | '-' | '+'
exprange        ::=  expr1 (':' expr1)?

number          ::=  '[-+]\?\d*\.\?\d\+\%([eE][-+]\?\d\+\)\?'
sqstr           ::=  "'" ("''" | !"'" '.')* "'"
dqstr           ::=  '"' ( '\\\\' | '\\"' | !'"' '.')* '"'
string          ::=  sqstr | dqstr
list            ::=  '\[' exprlist '\]'
exprlist        ::=  expr1? (',' expr1)*
dict            ::=  '{' (dictpair (',' dictpair)*)? '}'
dictpair        ::=  expr1 ':' expr1

optval          ::=  '&\w\+'

nestedexpr      ::=  '(' expr1 ')'

bareident       ::=  '\h\w*'
bracedident     ::=  ident? '{' ident '}\w*'
ident           ::=  bareident | bracedident
envvar          ::=  '$[A-Z]\+'
regval          ::=  '@[a-z0-9_/.+*"'']'

namespace       ::=  '\h\w\+#'
funcident       ::=  '\%([bstw]:\)\?\w\+' | namespace '\w\+'
bracedfuncident ::=  funcident? '{' ident '}\w*'
barefunccall    ::=  funcident '(' exprlist ')'
bracedfunccall  ::=  bracedfuncident '(' exprlist ')'
funccall        ::=  barefunccall | bracedfunccall
